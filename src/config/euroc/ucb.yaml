%YAML:1.0

#common parameters
imu_topic: "/imu_raw"
image_topic: "/camera_array/cam0/image_raw/compressed"
output_path: "/home/hhy/vins-mono-catkin_ws/src/VINS-Mono/path_recorder"

#camera calibration 
model_type: PINHOLE
camera_name: camera
image_width: 2048
image_height: 1536
distortion_parameters:
   k1: -3.0451652061637519e-01
   k2: 3.8894492749157322e-02
   p1: 1.0517466490567872e-03
   p2: -5.5095449411338973e-04
projection_parameters:
   fx: 1857.4752797615988
   fy: 1869.2155909761746
   cx: 1039.692658811044
   cy: 739.3362262994145

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 1   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.
                        # 2  Don't know anything about extrinsic parameters. You don't need to give R,T. We will try to calibrate it. Do some rotation movement at beginning.                        
#If you choose 0 or 1, you should write down the following matrix.
#Rotation from camera frame to imu frame, imu^R_cam
extrinsicRotation: !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [-0.0124894,-0.00473247,0.999911,  
            0.01299,-0.999905,-0.00457019, 
            0.999838,0.0129318,0.0125497]
#Translation from camera frame to imu frame, imu^T_cam
extrinsicTranslation: !!opencv-matrix
   rows: 3
   cols: 1
   dt: d
   data: [ 0.108802,-0.0238792, -0.336851]

#feature traker paprameters
max_cnt: 200           # max feature number in feature tracking
min_dist: 20            # min distance between two features 
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 2.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
equalize: 1             # if image is too dark or light, trun on equalize to find enough features
fisheye: 0              # if using fisheye, trun on it. A circle mask will be loaded to remove edge noisy points

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 8.133e-3          # accelerometer measurement noise standard deviation. #0.2   0.04
gyr_n: 7.43e-3        # gyroscope measurement noise standard deviation.     #0.05  0.004
acc_w: 1.212e-4         # accelerometer bias random work noise standard deviation.  #0.02
gyr_w: 8.66e-5      # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.81007     # gravity magnitude

#loop closure parameters
loop_closure: 0                    # start loop closure
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
fast_relocalization: 0             # useful in real-time and large project
pose_graph_save_path: "/home/shaozu/output/pose_graph/" # save and load path

#unsynchronization parameters
estimate_td: 0                     # online estimate time offset between camera and imu
td: 0.0                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#rolling shutter parameters
rolling_shutter: 0                  # 0: global shutter camera, 1: rolling shutter camera
rolling_shutter_tr: 0               # unit: s. rolling shutter read out time per frame (from data sheet). 

#visualization parameters
save_image: 0                   # save image in pose graph for visualization prupose; you can close this function by setting 0 
visualize_imu_forward: 0        # output imu forward propogation to achieve low latency and high frequence results
visualize_camera_size: 0.4      # size of camera marker in RVIZ
